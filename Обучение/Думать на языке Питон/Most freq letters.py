'''Принимает список слов или слово или текст, считает, сколько раз каждая буква повторяется.'''

file = open('C:\word.txt')

all_words = ''
for eo in file:
    all_words += eo
'''Создает строку, в которую записывает слова через перенос строки'''

def most_frequent(text):
    '''
    Считает, сколько раз каждая буква повторяется.
    1. Создаем пустой словарь
    2. перебираем каждый символ строки (текста)
    3. В словарь кладем:
        на место ключа – букву в нижнем регистре. В нижнем, чтобы буквы разного регистра считались за 1 символ
        на место значения – setdefault, которая добывает значение по ключу. В качестве ключа даем букву, если буквы нет,
        то записывает значение 0, затем + 1, если буква есть, то setdefault возвращает ее значение, к которому + 1.
        Setdefault можно заменить на get.
    '''
    dict = {}
    for letter in text:
        dict[letter.lower()] = dict.setdefault(letter.lower(), 0) + 1

    alphabeth = 'abcdefghijklmnopqrstuvwxyz'
    items_list = list(dict.items())
    '''
    Создаем алфавит, потом пригодится. Создаем список, куда кладем кортежи из пар словаря (т.е. [('a', 5), (...)])
    Создаем еще один пустой список list_in_alphabeth. Затем:
    1. Проходим по всем элементам списка кортежей, то есть елемент = кортеж
    2. Если элемент[0] (т.е. первый элемент, где буква\знак) содержится в алфавите...
    *это надо, чтобы исключить знаки препинания и пробелы
    3. ... то добавляем в пустой список кортеж, в котором сначала идет второй элемент (цифра), потом первый (буква)
    *это надо, чтобы быстро отсортировать кортежи, используя цифру, то есть сортируем по большей цифре.
    Готово, сортируем и печатаем.
    '''

    list_in_alphabeth = []
    for el in items_list:
        if el[0] in alphabeth:
            list_in_alphabeth.append((el[1], el[0]))

    list_in_alphabeth.sort(reverse=True)

    for el in list_in_alphabeth:
        print(el)


most_frequent('all_words')